name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: fluffy_pet_resource_management_system
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update kube config
        run: aws eks update-kubeconfig --name fluffy-pet-cluster  --region us-east-1

      - name: Verify and Deploy using kubeconfig, kubectl context, deployment pipeline
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: fluffy_pet_resource_management_system
          IMAGE_TAG: ${{ github.sha }}
          SPRING_PROFILES_ACTIVE: ${{ secrets.SPRING_PROFILES_ACTIVE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.DYNAMODB_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DYNAMODB_SECRET_KEY }}
        run: |
          kubectl config view
          kubectl config current-context
          kubectl cluster-info
          
          kubectl apply --dry-run=client -f deployment/deployment.yaml
          kubectl apply --dry-run=client -f deployment/service.yaml
          
          sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" deployment/deployment.yaml
          sed -i.bak "s|SPRING_PROFILES_ACTIVE_VALUE|$SPRING_PROFILES_ACTIVE|g" deployment/deployment.yaml
          sed -i.bak "s|AWS_SECRET_ACCESS_KEY_VALUE|$AWS_SECRET_ACCESS_KEY|g" deployment/deployment.yaml
          sed -i.bak "s|AWS_ACCESS_KEY_ID_VALUE|AWS_ACCESS_KEY_ID|g" deployment/deployment.yaml
          kubectl apply --validate=false -f deployment/deployment.yaml --v=8
          kubectl apply --validate=false -f deployment/service.yaml --v=8